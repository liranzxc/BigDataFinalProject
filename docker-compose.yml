version: '3.7'
services:
  spark-master:
    image: bde2020/spark-master:2.4.4-hadoop2.7
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    networks:
      - app-tier
  spark-worker-1:
    image: bde2020/spark-worker:2.4.4-hadoop2.7
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      - app-tier


  mongodb:
    image: 'bitnami/mongodb:4.0'
    ports:
      - "27017:27017"
    volumes:
      - 'mongodb_data:/bitnami'
    networks:
      - app-tier

  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    networks:
      - app-tier
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
      - '29092:29092'
    volumes:
      - 'kafka_data:/bitnami'
    networks:
      - app-tier
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper



networks:
  app-tier:
    driver: bridge
volumes:
  mongodb_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local




## docker-compose up -d
## will create a spark on background


#  producer:
#    build:
#      dockerfile: ./Dockerfile
#      context: .
#    command: python producer_main.py
#    deploy:
#      replicas: 0
#    environment:
#      UPLOAD_TOPIC: "test25"
#    depends_on:
#      - "zookeeper"
#      - "kafka"
#    networks:
#      kafkanet:
#        ipv4_address: 172.25.0.13
#
#  consumer:
#    build:
#      dockerfile: ./Dockerfile
#      context: .
#    deploy:
#      replicas: 0 # when start docker compose by default consumer dont start , also producer
#    environment:
#      UPLOAD_TOPIC: "test25"
#    command: python consumer_main.py
#    depends_on:
#      - "zookeeper"
#      - "kafka"
#      - "mongodb"
#    networks:
#      kafkanet:
#        ipv4_address: 172.25.0.15
